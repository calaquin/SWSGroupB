
package swsproject;

import java.awt.Color;
import java.awt.Graphics;


public class MyPanel extends javax.swing.JPanel {

    
    public void paintComponent(Graphics g){
          super.paintComponent(g);
          
          for (int i = 0; i < DataSingleton.getInstance().surface_list.size(); i++) {
            int start_x = DataSingleton.getInstance().surface_list.get(i).start_x;
            int start_y = DataSingleton.getInstance().surface_list.get(i).start_y;
            int width = DataSingleton.getInstance().surface_list.get(i).width;
            int height = DataSingleton.getInstance().surface_list.get(i).height;           
            g.setColor(DataSingleton.getInstance().surface_list.get(i).surface_color);                  
            g.fillRect(start_x, start_y, width, height);
            DataSingleton.getInstance().surface_list.get(i).lbl_name.setText(DataSingleton.getInstance().surface_list.get(i).name); 
            DataSingleton.getInstance().surface_list.get(i).lbl_h_water.setText(String.valueOf(Math.round(DataSingleton.getInstance().surface_list.get(i).h_water*100)/100.0) + " cm");  
            DataSingleton.getInstance().surface_list.get(i).lbl_temp_water.setText(String.valueOf(Math.round(DataSingleton.getInstance().surface_list.get(i).temp_water*100)/100.0) + " C");
            this.add(DataSingleton.getInstance().surface_list.get(i).lbl_name);
            this.add(DataSingleton.getInstance().surface_list.get(i).lbl_h_water);
            this.add(DataSingleton.getInstance().surface_list.get(i).lbl_temp_water);
          }        
                    
          if (DataSingleton.getInstance().draw_rect_state == 1) {
              
            int start_x = Math.min(DataSingleton.getInstance().start_x,DataSingleton.getInstance().end_x);
            int start_y = Math.min(DataSingleton.getInstance().start_y, DataSingleton.getInstance().end_y);
            int width = Math.abs(DataSingleton.getInstance().start_x - DataSingleton.getInstance().end_x);
            int height = Math.abs(DataSingleton.getInstance().start_y - DataSingleton.getInstance().end_y);
            
            
            int rect_type = DataSingleton.getInstance().rect_type;
            switch(rect_type)
            {
                case 0:
                    g.setColor(new Color(51, 153, 0));
                    break;
                case 1:
                    g.setColor(new Color(204, 204, 204));
                    break;
                case 2:
                    g.setColor(new Color(170, 170, 170));
                    break;
                default:
                    break;             
            }        
            g.fillRect(start_x, start_y, width, height);            
        }
    }
    public MyPanel() {
        initComponents();
    }
    
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
